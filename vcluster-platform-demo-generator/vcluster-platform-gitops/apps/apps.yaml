apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: vcluster-platform-demo
spec:
  displayName: vCluster Platform Demo
  description: >-
    vCluster Platform Hierarchical Demo Environment.
  owner:
    team: loft-admins
  recommendedApp:
    - virtualcluster
  defaultNamespace: vcluster-platform
  icon: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
  config:
    chart:
      name: vcluster-platform
      repoURL: https://charts.loft.sh/
  versions:
    - version: 4.2.2
      icon: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
      config:
        chart:
          name: vcluster-platform
          version: 4.2.2
          repoURL: https://charts.loft.sh/
        values: |-
          admin:
            create: false

          image: ghcr.io/loft-demos/vcluster-platform:4.2.2
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - ALL
            runAsUser: 1001
            runAsGroup: 1001

          isolation:
            enabled: true
            networkPolicy:
              enabled: false
          resources:
            requests:
              memory: 1Gi
              cpu: 500m
            limits:
              memory: 4Gi
              cpu: "2"

          ingress:
            enabled: true
            ingressClass: nginx
            host: "{{ .Values.domain }}"
            tls:
              enabled: true
              secret: ""

          envValueFrom:
            CLIENT_SECRET:
              secretKeyRef:
                name: oidc-secret
                key: clientSecret

          config:
            loftHost: "{{ .Values.domain }}"
            uiSettings:
              navBarButtons:
              - icon: https://argo-cd.readthedocs.io/en/stable/assets/logo.png
                link: https://argocd-{{ .Values.domain }}
                position: TopEnd
                text: Argo CD
              - icon: https://raw.githubusercontent.com/loft-demos/loft-demo-base/refs/heads/main/logos/vcluster.svg
                link: https://www.vcluster.com/docs/platform/
                position: TopEnd
                text: vCluster Docs
              - icon: https://cdn0.iconfinder.com/data/icons/shift-logotypes/32/Github-512.png
                link: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/tree/main/vcluster-gitops
                position: TopEnd
                text: GitHub Repo
              - link: https://komoplane-{{ .Values.domain }}
                position: TopEnd
                text: Komoplane
              logoURL: "{{ .Values.uiLogoURL }}"
              logoBackgroundColor: "{{ .Values.logoBackgroundColor }}"
            auth:
              oidc:
                issuerUrl: https://loft.rocks/oidc
                clientId: loft
                clientSecret: $CLIENT_SECRET
                redirectURI: https://{{ .Values.domain }}/auth/oidc/callback
                groupsClaim: groups
          product: vcluster-pro
      parameters:
        - variable: domain
          label: Loft Domain
          description: >-
            The domain to run this Loft instance on, e.g.
            some-customer.loft.host
          required: true
          placeholder: some-customer.loft.host
        - variable: uiLogoURL
          label: Logo logoURL
          description: Will update the vCluster Platform config ui settings logoURL
          defaultValue: https://cdn.prod.website-files.com/60d28872831dd0f87a178997/661ca132697136342511fa22_vCluster%20Logo.svg
        - variable: logoBackgroundColor
          label: Logo Background Color
          description: LogoBackgroundColor is the color value to use as the background color for the logo
          defaultValue: '#001529'
    - version: 0.430.37
      icon: https://raw.githubusercontent.com/loft-demos/loft-demo-base/refs/heads/main/logos/vCluster_Horizontal_2colors_reversed-2.svg
      defaultNamespace: vcluster-platform
      config:
        chart:
          name: vcluster-platform
          version: 4.3.0-alpha.37
          repoURL: https://charts.loft.sh/
        values: |-
          admin:
            create: false

          isolation:
            enabled: true
            networkPolicy:
              enabled: false
              
          resources:
            requests:
              memory: 2Gi
              cpu: 500m
            limits:
              memory: 6Gi
              cpu: "2"

          ingress:
            enabled: true
            ingressClass: nginx
            host: "{{ .Values.domain }}"
            tls:
              enabled: true
              secret: ""

          envValueFrom:
            CLIENT_SECRET:
              secretKeyRef:
                name: oidc-secret
                key: clientSecret

          config:
            loftHost: "{{ .Values.domain }}"
            costControl:
              enabled: true
            uiSettings:
              navBarButtons:
              - link: https://www.vcluster.com/docs/platform/
                position: TopEnd
                text: vCluster Docs
              - link: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/tree/main/vcluster-gitops
                position: TopEnd
                text: GitHub Repo
              - link: https://headlamp-{{ .Values.domain }}
                position: TopEnd
                text: Headlamp
              - link: https://komoplane-{{ .Values.domain }}
                position: TopEnd
                text: Komoplane
              logoURL: "{{ .Values.uiLogoURL }}"
              logoBackgroundColor: "{{ .Values.logoBackgroundColor }}"
            auth:
              oidc:
                issuerUrl: https://loft.rocks/oidc
                clientId: loft
                clientSecret: $CLIENT_SECRET
                redirectURI: https://{{ .Values.domain }}/auth/oidc/callback
                groupsClaim: groups
      parameters:
        - variable: domain
          label: Loft Domain
          description: >-
            The domain to run this Loft instance on, e.g.
            some-customer.loft.host
          required: true
          placeholder: some-customer.loft.host
        - variable: uiLogoURL
          label: Logo logoURL
          description: Will update the vCluster Platform config ui settings logoURL
          defaultValue: https://raw.githubusercontent.com/loft-demos/loft-demo-base/refs/heads/main/logos/vCluster_Horizontal_2colors_reversed-2.svg
        - variable: logoBackgroundColor
          label: Logo Background Color
          description: LogoBackgroundColor is the color value to use as the background color for the logo
          defaultValue: '#001529'
    - version: 0.430.30
      icon: https://raw.githubusercontent.com/loft-demos/loft-demo-base/refs/heads/main/logos/vCluster_Horizontal_2colors_reversed-2.svg
      defaultNamespace: vcluster-platform
      config:
        chart:
          name: vcluster-platform
          version: 4.3.0-alpha.30
          repoURL: https://charts.loft.sh/
        values: |-
          admin:
            create: false

          isolation:
            enabled: true
            networkPolicy:
              enabled: false
              
          resources:
            requests:
              memory: 2Gi
              cpu: 500m
            limits:
              memory: 6Gi
              cpu: "2"

          ingress:
            enabled: true
            ingressClass: nginx
            host: "{{ .Values.domain }}"
            tls:
              enabled: true
              secret: ""

          envValueFrom:
            CLIENT_SECRET:
              secretKeyRef:
                name: oidc-secret
                key: clientSecret

          config:
            loftHost: "{{ .Values.domain }}"
            costControl:
              enabled: true
            uiSettings:
              navBarButtons:
              - link: https://www.vcluster.com/docs/platform/
                position: TopEnd
                text: vCluster Docs
              - link: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/tree/main/vcluster-gitops
                position: TopEnd
                text: GitHub Repo
              - link: https://headlamp-{{ .Values.domain }}
                position: TopEnd
                text: Headlamp
              - link: https://komoplane-{{ .Values.domain }}
                position: TopEnd
                text: Komoplane
              logoURL: "{{ .Values.uiLogoURL }}"
              logoBackgroundColor: "{{ .Values.logoBackgroundColor }}"
            auth:
              oidc:
                issuerUrl: https://loft.rocks/oidc
                clientId: loft
                clientSecret: $CLIENT_SECRET
                redirectURI: https://{{ .Values.domain }}/auth/oidc/callback
                groupsClaim: groups
      parameters:
        - variable: domain
          label: Loft Domain
          description: >-
            The domain to run this Loft instance on, e.g.
            some-customer.loft.host
          required: true
          placeholder: some-customer.loft.host
        - variable: uiLogoURL
          label: Logo logoURL
          description: Will update the vCluster Platform config ui settings logoURL
          defaultValue: https://raw.githubusercontent.com/loft-demos/loft-demo-base/refs/heads/main/logos/vCluster_Horizontal_2colors_reversed-2.svg
        - variable: logoBackgroundColor
          label: Logo Background Color
          description: LogoBackgroundColor is the color value to use as the background color for the logo
          defaultValue: '#001529'
    - version: 0.430.4
      icon: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
      defaultNamespace: vcluster-platform
      config:
        chart:
          name: vcluster-platform
          version: 4.3.0-alpha.4
          repoURL: https://charts.loft.sh/
        values: |-
          admin:
            create: false

          isolation:
            enabled: true
            networkPolicy:
              enabled: false
              
          resources:
            requests:
              memory: 2Gi
              cpu: 500m
            limits:
              memory: 6Gi
              cpu: "2"

          ingress:
            enabled: true
            ingressClass: nginx
            host: "{{ .Values.domain }}"
            tls:
              enabled: true
              secret: ""

          envValueFrom:
            CLIENT_SECRET:
              secretKeyRef:
                name: oidc-secret
                key: clientSecret

          config:
            loftHost: "{{ .Values.domain }}"
            costControl:
              enabled: true
            uiSettings:
              navBarButtons:
              - link: https://www.vcluster.com/docs/platform/
                position: TopEnd
                text: vCluster Docs
              - link: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/tree/main/vcluster-gitops
                position: TopEnd
                text: GitHub Repo
              - link: https://komoplane-{{ .Values.domain }}
                position: TopEnd
                text: Komoplane
              logoURL: "{{ .Values.uiLogoURL }}"
              logoBackgroundColor: "{{ .Values.logoBackgroundColor }}"
            auth:
              oidc:
                issuerUrl: https://loft.rocks/oidc
                clientId: loft
                clientSecret: $CLIENT_SECRET
                redirectURI: https://{{ .Values.domain }}/auth/oidc/callback
                groupsClaim: groups
      parameters:
        - variable: domain
          label: Loft Domain
          description: >-
            The domain to run this Loft instance on, e.g.
            some-customer.loft.host
          required: true
          placeholder: some-customer.loft.host
        - variable: uiLogoURL
          label: Logo logoURL
          description: Will update the vCluster Platform config ui settings logoURL
          defaultValue: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
        - variable: logoBackgroundColor
          label: Logo Background Color
          description: LogoBackgroundColor is the color value to use as the background color for the logo
          defaultValue: '#001529'
    - version: 0.42.2
      icon: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
      defaultNamespace: vcluster-platform
      config:
        chart:
          name: vcluster-platform
          version: 4.2.2-rc.10
          repoURL: https://charts.loft.sh/
        values: |-
          admin:
            create: false

          isolation:
            enabled: true
            networkPolicy:
              enabled: false
              
          resources:
            requests:
              memory: 2Gi
              cpu: 500m
            limits:
              memory: 6Gi
              cpu: "2"

          ingress:
            enabled: true
            ingressClass: nginx
            host: "{{ .Values.domain }}"
            tls:
              enabled: true
              secret: ""

          envValueFrom:
            CLIENT_SECRET:
              secretKeyRef:
                name: oidc-secret
                key: clientSecret

          config:
            loftHost: "{{ .Values.domain }}"
            costControl:
              enabled: true
            uiSettings:
              navBarButtons:
              - link: https://www.vcluster.com/docs/platform/
                position: TopEnd
                text: vCluster Docs
              - link: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/tree/main/vcluster-gitops
                position: TopEnd
                text: GitHub Repo
              - link: https://komoplane-{{ .Values.domain }}
                position: TopEnd
                text: Komoplane
              logoURL: "{{ .Values.uiLogoURL }}"
              logoBackgroundColor: "{{ .Values.logoBackgroundColor }}"
            auth:
              oidc:
                issuerUrl: https://loft.rocks/oidc
                clientId: loft
                clientSecret: $CLIENT_SECRET
                redirectURI: https://{{ .Values.domain }}/auth/oidc/callback
                groupsClaim: groups
      parameters:
        - variable: domain
          label: Loft Domain
          description: >-
            The domain to run this Loft instance on, e.g.
            some-customer.loft.host
          required: true
          placeholder: some-customer.loft.host
        - variable: uiLogoURL
          label: Logo logoURL
          description: Will update the vCluster Platform config ui settings logoURL
          defaultValue: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
        - variable: logoBackgroundColor
          label: Logo Background Color
          description: LogoBackgroundColor is the color value to use as the background color for the logo
          defaultValue: '#001529'
    - version: 0.42.1
      icon: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
      defaultNamespace: vcluster-platform
      config:
        chart:
          name: vcluster-platform
          version: 4.2.1
          repoURL: https://charts.loft.sh/
        values: |-
          admin:
            create: false

          isolation:
            enabled: true
            networkPolicy:
              enabled: false
              
          resources:
            requests:
              memory: 1Gi
              cpu: 400m
            limits:
              memory: 6Gi
              cpu: "2"

          ingress:
            enabled: true
            ingressClass: nginx
            host: "{{ .Values.domain }}"
            tls:
              enabled: true
              secret: ""

          envValueFrom:
            CLIENT_SECRET:
              secretKeyRef:
                name: oidc-secret
                key: clientSecret

          config:
            loftHost: "{{ .Values.domain }}"
            costControl:
              enabled: true
            uiSettings:
              navBarButtons:
              - link: https://www.vcluster.com/docs/platform/
                position: TopEnd
                text: vCluster Docs
              - link: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/tree/main/vcluster-gitops
                position: TopEnd
                text: GitHub Repo
              - link: https://komoplane-{{ .Values.domain }}
                position: TopEnd
                text: Komoplane
              logoURL: "{{ .Values.uiLogoURL }}"
              logoBackgroundColor: "{{ .Values.logoBackgroundColor }}"
            auth:
              oidc:
                issuerUrl: https://loft.rocks/oidc
                clientId: loft
                clientSecret: $CLIENT_SECRET
                redirectURI: https://{{ .Values.domain }}/auth/oidc/callback
                groupsClaim: groups
      parameters:
        - variable: domain
          label: Loft Domain
          description: >-
            The domain to run this Loft instance on, e.g.
            some-customer.loft.host
          required: true
          placeholder: some-customer.loft.host
        - variable: uiLogoURL
          label: Logo logoURL
          description: Will update the vCluster Platform config ui settings logoURL
          defaultValue: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
        - variable: logoBackgroundColor
          label: Logo Background Color
          description: LogoBackgroundColor is the color value to use as the background color for the logo
          defaultValue: '#001529'
---
apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: vcluster-platform-demo-configure-admins
spec:
  displayName: vCluster Platform Demo Configure Admins
  description: Configures SSO Groups that should get admin privileges
  owner:
    team: loft-admins
  config:
    chart: {}
    bash:
      script: >-
        kubectl wait --for condition=established --timeout=60s
        crd/teams.storage.loft.sh


        while ! kubectl get teams.storage.loft.sh loft-admins; do
          echo "Waiting for team...";
          sleep 1; 
        done


        cat <<EOF | kubectl apply -f -

        kind: Team

        apiVersion: storage.loft.sh/v1

        metadata:
          name: loft-admins
        spec:
          displayName: Global Admins
          description: All users in this team have full admin access to all clusters
          username: loftadmins
          groups:
            - loft:admins
            - Administration
            - Design
            - DevRel
            - Engineering
            - Marketing
            - Product
            - Sales
          clusterRoles:
            - name: loft-management-admin
          access:
            - name: loft-access
              verbs:
                - get
                - bind
              subresources:
                - clusters
              teams:
                - loft-admins
        EOF


        kubectl annotate clusters loft-cluster domainPrefix={{
        .Values.loft.virtualClusterName }}

        kubectl annotate clusters loft-cluster domain={{
        .Values.loft.clusterAnnotations.domain }}

---
apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: argocd
spec:
  displayName: ArgoCD
  description: Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes
  recommendedApp:
    - virtualcluster
  defaultNamespace: argocd
  icon: https://argo-cd.readthedocs.io/en/stable/assets/logo.png
  config:
    chart:
      name: argo-cd
      repoURL: https://argoproj.github.io/argo-helm
    values: '{{ .Values.appValues }}'
  versions:
    - defaultNamespace: argocd
      icon: https://argo-cd.readthedocs.io/en/stable/assets/logo.png
      config:
        chart:
          name: argo-cd
          version: 7.8.2
          repoURL: https://argoproj.github.io/argo-helm
        values: '{{ .Values.appValues }}'
      parameters:
        - variable: appValues
          label: Helm Values
          description: The helm values to use to deploy this chart.
          type: multiline
          defaultValue: |-
            server:
              ingress:
                enabled: true
                hosts:
                - my-domain.com
      version: 2.14.2
  access:
    - verbs:
        - get
      users:
        - '*'
---
apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: crossplane
spec:
  displayName: Crossplane
  owner:
    team: loft-admins
  recommendedApp:
    - cluster
  defaultNamespace: crossplane-system
  icon: https://docs.crossplane.io/img/crossplane-logo.svg
  config:
    chart:
      name: crossplane
      repoURL: https://charts.crossplane.io/stable
  versions:
    - icon: https://docs.crossplane.io/img/crossplane-logo.svg
      config:
        chart:
          name: crossplane
          version: 1.17.4
          repoURL: https://charts.crossplane.io/stable
      version: 1.17.4
---
apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: komoplane
spec:
  displayName: Komoplane
  description: >-
    Komodor's Crossplane Tool is a project to experiment with visualizing
    Crossplane resources.
  owner:
    team: loft-admins
  recommendedApp:
    - virtualcluster
  defaultNamespace: crossplane-system
  icon: >-
    https://raw.githubusercontent.com/komodorio/komoplane/main/pkg/frontend/src/assets/logo_dark_text.svg
  config:
    chart:
      name: komoplane
      repoURL: https://helm-charts.komodor.io
  versions:
    - defaultNamespace: crossplane-system
      icon: >-
        https://raw.githubusercontent.com/komodorio/komoplane/main/pkg/frontend/src/assets/logo_dark_text.svg
      config:
        chart:
          name: komoplane
          version: 0.1.6
          repoURL: https://helm-charts.komodor.io
        values: |-
          ingress:
            enabled: true
            className: "nginx"
            annotations: {}
            hosts:
              - host: komoplane-{{ .Values.loft.virtualClusterName }}.{{ .Values.loft.clusterAnnotations.domain }}
                paths:
                  - path: /
                    pathType: ImplementationSpecific
            tls:
              - hosts:
                  - komoplane-{{ .Values.loft.virtualClusterName }}.{{ .Values.loft.clusterAnnotations.domain }}
      version: 0.1.6
---
apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: github-repo-argo-cd-webhooks
spec:
  displayName: GitHub Repo with Argo CD Webhooks
  owner:
    team: loft-admins
  config:
    chart: {}
    bash:
      script: >
        kubectl wait --for condition=established --timeout=60s
        crd/applicationsets.argoproj.io


        while ! kubectl get crd applicationsets.argoproj.io; do
          echo "Waiting for argo cd applicationset crd...";
          sleep 1; 
        done


        kubectl wait --for condition=established --timeout=60s
        crd/applicationsets.argoproj.io


        while ! kubectl get crd applicationsets.argoproj.io; do
          echo "Waiting for argo cd applicationset crd...";
          sleep 1; 
        done


        POD=$(kubectl get pod -n argocd -l
        app.kubernetes.io/component=applicationset-controller -o
        jsonpath="{.items[0].metadata.name}")

        kubectl delete pod -n argocd $POD


        cat <<EOF | kubectl apply -f -

        apiVersion: demo.loft.sh/v1alpha1

        kind: DemoRepository

        metadata:
          name: github-repo
          namespace: default
        spec:
          name: "{{ .Values.loft.virtualClusterName }}-app"
          loftDemoDomain: "{{ .Values.loft.virtualClusterName }}.{{ .Values.loft.clusterAnnotations.domain }}"
          virtualClusterName: "{{ .Values.loft.virtualClusterName }}"
          virtualClusterNamespace: "{{ .Values.loft.virtualClusterNamespace }}"
        EOF


        while ! kubectl get secret ghcr-login-secret -n vcluster-platform; do
          echo "Waiting for ghcr-login-secret...";
          sleep 1; 
        done

        PULL_SECRET=$(kubectl get secret ghcr-login-secret -n vcluster-platform -o
        jsonpath="{.data['\.dockerconfigjson']}")

        cat <<EOF | kubectl apply -f -

        apiVersion: argoproj.io/v1alpha1

        kind: Application

        metadata:
          name: vcluster-gitops
          namespace: argocd
        spec:
          destination:
            server: https://kubernetes.default.svc
          project: default
          source:
            path: vcluster-gitops
            repoURL: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app.git
            targetRevision: HEAD
            kustomize:
              patches:
                - target:
                    kind: SharedSecret
                    name: ghcr-login-secret
                  patch: |-
                    - op: replace
                      path: /spec/data/.dockerconfigjson
                      value: $PULL_SECRET
                - target:
                    kind: Project
                    name: auth-core
                  patch: |-
                    - op: replace
                      path: /spec/argoCD/sso/host
                      value: "https://argocd-{{ .Values.loft.virtualClusterName }}.{{ .Values.loft.clusterAnnotations.domain }}"
                - target:
                    kind: Project
                    name: default
                  patch: |-
                    - op: replace
                      path: /spec/argoCD/sso/host
                      value: "https://argocd-{{ .Values.loft.virtualClusterName }}.{{ .Values.loft.clusterAnnotations.domain }}"
                - target:
                    kind: Project
                    name: api-framework
                  patch: |-
                    - op: replace
                      path: /spec/argoCD/sso/host
                      value: "https://argocd-api-framework-{{ .Values.loft.virtualClusterName }}.{{ .Values.loft.clusterAnnotations.domain }}"
          syncPolicy:
            automated:
              prune: true
        EOF

        cat <<EOF | kubectl apply -f -

        apiVersion: argoproj.io/v1alpha1

        kind: ApplicationSet

        metadata:
          name: pr-vcluster
          namespace: argocd
        spec:
          generators:
            - pullRequest:
                github:
                  appSecretName: loft-demo-org-cred
                  labels:
                    - create-prvcluster
                  owner: loft-demos
                  repo: {{ .Values.loft.virtualClusterName }}-app
                requeueAfterSeconds: 30
                template:
                  metadata: {}
                  spec:
                    destination: {}
                    project: ''
          template:
            metadata:
              name: {{ .Values.loft.virtualClusterName }}-app-pr-{{`{{number}}`}}
            spec:
              destination:
                name: in-cluster
                namespace: p-api-framework
              info:
                - name: PRvCluster Argo CD URL
                  value: https://argocd-{{ .Values.loft.virtualClusterName }}-app-pr-{{`{{number}}`}}.{{ .Values.loft.clusterAnnotations.domain }}
                - name: GitHub PR
                  value: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app/pull/{{`{{number}}`}}
              project: default
              source:
                kustomize:
                  namePrefix: {{ .Values.loft.virtualClusterName }}-app-pr-{{`{{number}}`}}-
                  patches:
                    - patch: |-
                        - op: replace
                          path: /spec/repo
                          value: {{ .Values.loft.virtualClusterName }}-app
                        - op: replace
                          path: /spec/prNumber
                          value: '{{`{{number}}`}}'
                      target:
                        kind: PullRequestEnvironment
                        name: vcluster
                path: kustomize-pr/
                repoURL: https://github.com/loft-demos/{{ .Values.loft.virtualClusterName }}-app.git
                targetRevision: '{{`{{head_sha}}`}}'
              syncPolicy:
                automated:
                  selfHeal: true
        EOF
---
apiVersion: management.loft.sh/v1
kind: App
metadata:
  name: crossplane-manifest
spec:
  displayName: Crossplane Manifests
  owner:
    team: loft-admins
  config:
    chart: {}
    bash:
      script: >
        kubectl wait --for condition=established --timeout=60s
        crd/providers.pkg.crossplane.io

        while ! kubectl get crd providers.pkg.crossplane.io; do
          echo "Waiting for crossplane providers.pkg.crossplane.io crd...";
          sleep 1; 
        done

        while ! kubectl get secret oidc-secret -n vcluster-platform; do
          echo "Waiting for oidc-secret...";
          sleep 1; 
        done

        OIDC_CLIENT_SECRET=$(kubectl get secret oidc-secret -n vcluster-platform -o
        jsonpath="{.data.clientSecret}" | base64 -d)

        cat <<EOF | kubectl apply -f -

        apiVersion: v1 

        kind: ServiceAccount 

        metadata:
          name: kubernetes-provider-cluster-admin
        --- 

        apiVersion: pkg.crossplane.io/v1 

        kind: Provider 

        metadata:
          name: provider-kubernetes
        spec:
          package: "xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.14.0"
          runtimeConfigRef:
            apiVersion: pkg.crossplane.io/v1beta1
            kind: DeploymentRuntimeConfig
            name: provider-kubernetes
        --- 

        apiVersion: pkg.crossplane.io/v1beta1 

        kind: DeploymentRuntimeConfig 

        metadata:
          name: provider-kubernetes
        spec:
          serviceAccountTemplate:
            metadata:
              name: provider-kubernetes
        --- 

        apiVersion: rbac.authorization.k8s.io/v1 

        kind: ClusterRoleBinding 

        metadata:
          name: provider-kubernetes-cluster-admin
        subjects:
          - kind: ServiceAccount
            name: provider-kubernetes
            namespace: crossplane-system
        roleRef:
          kind: ClusterRole
          name: cluster-admin
          apiGroup: rbac.authorization.k8s.io

        EOF

        while ! kubectl get crd providerconfigs.kubernetes.crossplane.io; do
          echo "Waiting for crossplane providerconfigs.kubernetes.crossplane.io crd...";
          sleep 1; 
        done


        cat <<EOF | kubectl apply -f -

        --- 

        apiVersion: kubernetes.crossplane.io/v1alpha1 

        kind: ProviderConfig 

        metadata:
          name: kubernetes-provider
        spec:
          credentials:
            source: InjectedIdentity

        EOF

        cat <<EOF | kubectl apply -f -
        
        apiVersion: pkg.crossplane.io/v1
        
        kind: Provider
        
        metadata:
          name: provider-github
        spec:
          ignoreCrossplaneConstraints: false
          package: coopnorge/provider-github:v0.10.0
          packagePullPolicy: IfNotPresent
          revisionActivationPolicy: Automatic
          revisionHistoryLimit: 1
          skipDependencyResolution: false

        EOF

        while ! kubectl get crd providerconfigs.github.upbound.io; do
          echo "Waiting for crossplane providerconfigs.github.upbound.io crd...";
          sleep 1; 
        done


        cat <<EOF | kubectl apply -f -

        apiVersion: github.upbound.io/v1beta1
        
        kind: ProviderConfig
        
        metadata:
          name: github-provider-config
        spec:
          credentials:
            secretRef:
              key: credentials
              name: github-provider-secret
              namespace: crossplane-system
            source: Secret

        EOF


        cat <<EOF | kubectl apply -f -
        
        apiVersion: apiextensions.crossplane.io/v1
        
        kind: CompositeResourceDefinition
        
        metadata:
          name: xargocdwebhooks.demo.loft.sh
        spec:
          claimNames:
            kind: ArgoCDWebhook
            plural: argocdwebhooks
          defaultCompositeDeletePolicy: Background
          defaultCompositionUpdatePolicy: Automatic
          group: demo.loft.sh
          names:
            kind: XArgoCDWebhook
            plural: xargocdwebhooks
          versions:
            - name: v1alpha1
              referenceable: true
              schema:
                openAPIV3Schema:
                  description: >-
                    Creates webhooks for an Argo CD Application server and ApplicationSet server.
                  properties:
                    spec:
                      properties:
                        repoName:
                          description: Repo name
                          type: string
                        virtualClusterNamespace:
                          description: Namespace for vCluster instance
                          type: string
                      required:
                        - repoName
                        - virtualClusterNamespace
                      type: object
                  type: object
              served: true
        EOF


        cat <<EOF | kubectl apply -f -

        apiVersion: apiextensions.crossplane.io/v1
        
        kind: Composition
        
        metadata:
          labels:
            crossplane.io/xrd: xargocdwebhooks.demo.loft.sh
          name: argocdwebhook
        spec:
          compositeTypeRef:
            apiVersion: demo.loft.sh/v1alpha1
            kind: XArgoCDWebhook
          mode: Resources
          publishConnectionDetailsWithStoreConfigRef:
            name: default
          resources:
            - base:
                apiVersion: repo.github.upbound.io/v1alpha1
                kind: RepositoryWebhook
                metadata:
                  name: argo-webhook
                spec:
                  forProvider:
                    active: true
                    configuration:
                      - contentType: json
                        insecureSsl: false
                        urlSecretRef:
                          key: url
                          name: argo-webhook-url
                    events:
                      - push
                      - pull_request
                  managementPolicies:
                    - Create
                    - Observe
                  providerConfigRef:
                    name: github-provider-config
              name: argo-webhook
              patches:
                - fromFieldPath: metadata.name
                  toFieldPath: metadata.name
                  transforms:
                    - string:
                        fmt: '%s-webhook'
                        type: Format
                      type: string
                  type: FromCompositeFieldPath
                - fromFieldPath: spec.repoName
                  toFieldPath: spec.forProvider.repository
                  type: FromCompositeFieldPath
                - fromFieldPath: spec.virtualClusterNamespace
                  toFieldPath: spec.forProvider.configuration[0].urlSecretRef.namespace
                  type: FromCompositeFieldPath
              readinessChecks:
                - matchCondition:
                    status: 'True'
                    type: Ready
                  type: MatchCondition
            - base:
                apiVersion: repo.github.upbound.io/v1alpha1
                kind: RepositoryWebhook
                metadata:
                  name: argo-appset-webhook
                spec:
                  forProvider:
                    active: true
                    configuration:
                      - contentType: json
                        insecureSsl: false
                        urlSecretRef:
                          key: url
                          name: argo-appset-webhook-url
                    events:
                      - push
                      - pull_request
                  managementPolicies:
                    - Create
                    - Observe
                  providerConfigRef:
                    name: github-provider-config
              name: argo-appset-webhook
              patches:
                - fromFieldPath: metadata.name
                  toFieldPath: metadata.name
                  transforms:
                    - string:
                        fmt: '%s-appset-webhook'
                        type: Format
                      type: string
                  type: FromCompositeFieldPath
                - fromFieldPath: spec.repoName
                  toFieldPath: spec.forProvider.repository
                  type: FromCompositeFieldPath
                - fromFieldPath: spec.virtualClusterNamespace
                  toFieldPath: spec.forProvider.configuration[0].urlSecretRef.namespace
                  type: FromCompositeFieldPath
              readinessChecks:
                - matchCondition:
                    status: 'True'
                    type: Ready
                  type: MatchCondition
        EOF


        cat <<EOF | kubectl apply -f -

        apiVersion: pkg.crossplane.io/v1beta1

        kind: Function

        metadata:
          name: function-patch-and-transform
        spec:
          ignoreCrossplaneConstraints: false
          package: xpkg.upbound.io/crossplane-contrib/function-patch-and-transform:v0.6.0
          packagePullPolicy: IfNotPresent
          revisionActivationPolicy: Automatic
          revisionHistoryLimit: 1
          runtimeConfigRef:
            apiVersion: pkg.crossplane.io/v1beta1
            kind: DeploymentRuntimeConfig
            name: default
          skipDependencyResolution: false
        ---

        apiVersion: apiextensions.crossplane.io/v1

        kind: CompositeResourceDefinition

        metadata:
          name: xpullrequestenvironments.virtualcluster.demo.loft.sh
        spec:
          claimNames:
            kind: PullRequestEnvironment
            plural: pullrequestenvironments
          defaultCompositeDeletePolicy: Background
          defaultCompositionUpdatePolicy: Automatic
          group: virtualcluster.demo.loft.sh
          names:
            kind: XPullRequestEnvironment
            plural: xpullrequestenvironments
          versions:
            - name: v1alpha1
              referenceable: true
              schema:
                openAPIV3Schema:
                  description: >-
                    A PullRequestEnvironment for virtual clusters is a composite
                    resource that represents a vCluster with ArgoCD installed and
                    configured with an ApplicationSet for a GitHub Pull Request.
                  properties:
                    spec:
                      properties:
                        k8sVersion:
                          description: The Kubernetes version of the vCluster instance
                          type: string
                        prNumber:
                          description: Pull Request number
                          type: string
                        project:
                          description: vCluster Platform project
                          type: string
                        repo:
                          description: Application repository name
                          type: string
                      required:
                        - repo
                        - project
                        - k8sVersion
                      type: object
                  type: object
              served: true
        ---

        apiVersion: apiextensions.crossplane.io/v1

        kind: Composition

        metadata:
          creationTimestamp: '2024-07-15T20:28:55Z'
          generation: 5
          labels:
            crossplane.io/xrd: xpullrequestenvironments.virtualcluster.demo.loft.sh
          name: pullrequestenvironments
        spec:
          compositeTypeRef:
            apiVersion: virtualcluster.demo.loft.sh/v1alpha1
            kind: XPullRequestEnvironment
          mode: Pipeline
          pipeline:
            - functionRef:
                name: function-patch-and-transform
              input:
                apiVersion: pt.fn.crossplane.io/v1beta1
                kind: Resources
                resources:
                  - base:
                      apiVersion: kubernetes.crossplane.io/v1alpha2
                      kind: Object
                      spec:
                        forProvider:
                          manifest:
                            apiVersion: management.loft.sh/v1
                            kind: VirtualClusterInstance
                            metadata: {}
                            spec:
                              clusterRef:
                                cluster: loft-cluster
                              owner:
                                team: api-framework
                              templateRef:
                                name: pull-request-vcluster
                                version: 1.0.x
                        providerConfigRef:
                          name: kubernetes-provider
                        readiness:
                          policy: DeriveFromObject
                    name: vcluster
                    patches:
                      - fromFieldPath: metadata.name
                        toFieldPath: spec.forProvider.manifest.metadata.name
                      - fromFieldPath: spec.project
                        toFieldPath: spec.forProvider.manifest.metadata.namespace
                        transforms:
                          - string:
                              fmt: p-%s
                              type: Format
                            type: string
                        type: FromCompositeFieldPath
                      - combine:
                          strategy: string
                          string:
                            fmt: |
                              k8sVersion: '%s'
                              prnumber: '%s'
                              reponame: '%s'
                          variables:
                            - fromFieldPath: spec.k8sVersion
                            - fromFieldPath: spec.prNumber
                            - fromFieldPath: spec.repo
                        toFieldPath: spec.forProvider.manifest.spec.parameters
                        type: CombineFromComposite
                    readinessChecks:
                      - fieldPath: status.atProvider.manifest.status.phase
                        matchString: Ready
                        type: MatchString
                  - base:
                      apiVersion: kubernetes.crossplane.io/v1alpha2
                      kind: Object
                      spec:
                        forProvider:
                          manifest:
                            apiVersion: v1
                            kind: Secret
                            metadata:
                              annotations:
                                argoHost: PATCHED
                              labels:
                                clientID: PATCHED
                                component: oidcServer
                              name: loft-argocd-oidc-secret
                              namespace: vcluster-platform
                            stringData:
                              clientID: PATCHED
                              clientSecret: '$OIDC_CLIENT_SECRET'
                              name: 'Loft'
                              redirectURIs: PATCHED
                        providerConfigRef:
                          name: kubernetes-provider
                    name: loft-argocd-oidc-secret
                    patches:
                      - fromFieldPath: metadata.name
                        toFieldPath: spec.forProvider.manifest.metadata.name
                        transforms:
                          - string:
                              fmt: argocd-oidc-%s
                              type: Format
                            type: string
                      - fromFieldPath: metadata.name
                        toFieldPath: spec.forProvider.manifest.metadata.labels["clientID"]
                        transforms:
                          - string:
                              fmt: argocd-%s
                              type: Format
                            type: string
                      - fromFieldPath: metadata.name
                        toFieldPath: spec.forProvider.manifest.metadata.annotations["argoHost"]
                        transforms:
                          - string:
                              fmt: https://argocd-%s.{{ .Values.loft.clusterAnnotations.domain }}
                              type: Format
                            type: string
                      - fromFieldPath: metadata.name
                        toFieldPath: spec.forProvider.manifest.stringData.clientID
                        transforms:
                          - string:
                              fmt: argocd-%s
                              type: Format
                            type: string
                      - fromFieldPath: metadata.name
                        toFieldPath: spec.forProvider.manifest.stringData.redirectURIs
                        transforms:
                          - string:
                              fmt: https://argocd-%s.{{ .Values.loft.clusterAnnotations.domain }}/auth/callback
                              type: Format
                            type: string
              step: patch-and-transform
          publishConnectionDetailsWithStoreConfigRef:
            name: default
        EOF
        
  parameters:
    - variable: vClusterName
      label: vCluster Name
      description: Name of vCluster using App

---
